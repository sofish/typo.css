{
  "name": "clean-css",
  "version": "1.0.2",
  "author": {
    "name": "Jakub Pawlowicz",
    "email": "jakub@goalsmashers.com",
    "url": "http://twitter.com/GoalSmashers"
  },
  "description": "A well-tested CSS minifier",
  "keywords": [
    "css",
    "minifier"
  ],
  "homepage": "https://github.com/GoalSmashers/clean-css",
  "repository": {
    "type": "git",
    "url": "https://github.com/GoalSmashers/clean-css.git"
  },
  "bin": {
    "cleancss": "./bin/cleancss"
  },
  "main": "index.js",
  "scripts": {
    "bench": "node ./test/bench.js",
    "check": "jshint .",
    "prepublish": "jshint .",
    "test": "vows"
  },
  "dependencies": {
    "commander": "1.1.x"
  },
  "devDependencies": {
    "vows": "0.7.x",
    "jshint": "1.1.x"
  },
  "engines": {
    "node": ">=0.6.0"
  },
  "readmeFilename": "README.md",
  "license": "MIT",
  "readme": "[![NPM version](https://badge.fury.io/js/clean-css.png)](http://badge.fury.io/js/clean-css)\n[![Build Status](https://secure.travis-ci.org/GoalSmashers/clean-css.png)](http://travis-ci.org/GoalSmashers/clean-css)\n[![Dependency Status](https://gemnasium.com/GoalSmashers/clean-css.png)](https://gemnasium.com/GoalSmashers/clean-css)\n\n## What is clean-css?\n\nClean-css is a [node.js](http://nodejs.org/) library for minifying CSS files.\nIt does the same job as YUI Compressor's CSS minifier, but much faster thanks\nto many speed optimizations and node.js' V8 engine.\n\n\n## Usage\n\n### What are the requirements?\n\n```\nnode.js 0.6.0+ on UN*X (fully tested on OS X 10.6+ and CentOS)\nnode.js 0.8.0+ on Windows\n```\n\n### How to install clean-css?\n\n```\nnpm install clean-css\n```\n\n### How to use clean-css CLI?\n\nClean-css accepts the following command line arguments (please make sure\nyou use `<source-file>` as the very last argument to avoid potential issues):\n\n```\ncleancss [options] <source-file>\n\n-h, --help                  Output usage information\n-v, --version               Output the version number\n-e, --remove-empty          Remove empty declarations (e.g. a{})\n-b, --keep-line-breaks      Keep line breaks\n--s0                        Remove all special comments (i.e. /*! special comment */)\n--s1                        Remove all special comments but the first one\n-r, --root [root-path]      Set a root path to which resolve absolute @import rules\n-o, --output [output-file]  Use [output-file] as output instead of STDOUT\n```\n\n#### Examples:\n\nTo minify a **public.css** file into **public-min.css** do:\n\n```\ncleancss -o public-min.css public.css\n```\n\nTo minify the same **public.css** into the standard output skip the `-o` parameter:\n\n```\ncleancss public.css\n```\n\nMore likely you would like to concatenate a couple of files.\nIf you are on a Unix-like system:\n\n```bash\ncat one.css two.css three.css | cleancss -o merged-and-minified.css\n```\n\nOn Windows:\n\n```bat\ntype one.css two.css three.css | cleancss -o merged-and-minified.css\n```\n\nOr even gzip the result at once:\n\n```bash\ncat one.css two.css three.css | cleancss | gzip -9 -c > merged-minified-and-gzipped.css.gz\n```\n\n### How to use clean-css programmatically?\n\n```js\nvar cleanCSS = require('clean-css');\nvar source = \"a{font-weight:bold;}\";\nvar minimized = cleanCSS.process(source);\n```\n\nProcess method accepts a hash as a second parameter, i.e.,\n`cleanCSS.process(source, options)` with the following options available:\n\n* `keepSpecialComments` - `*` for keeping all (default), `1` for keeping first one, `0` for removing all\n* `keepBreaks` - whether to keep line breaks (default is false)\n* `removeEmpty` - whether to remove empty elements (default is false)\n* `debug` - turns on debug mode measuring time spent on cleaning up\n  (run `npm run bench` to see example)\n\n### What are the clean-css' dev commands?\n\nFirst clone the source, then run:\n\n* `npm run bench` for clean-css benchmarks (see [test/bench.js](/test/bench.js) for details)\n* `npm run check` to check JS sources with [JSHint](https://github.com/jshint/jshint/)\n* `npm test` for the test suite\n\n### How do you preserve a comment block?\n\nUse the `/*!` notation instead of the standard one `/*`:\n\n```css\n/*!\n  Important comments included in minified output.\n*/\n```\n\n\n## Acknowledgments\n\n* Vincent Voyer ([@vvo](https://github.com/vvo)) for a patch with better\n  empty element regex and for inspiring us to do many performance improvements\n  in 0.4 release.\n* Isaac ([@facelessuser](https://github.com/facelessuser)) for pointing out\n  a flaw in clean-css' stateless mode.\n* Jan Michael Alonzo ([@jmalonzo](https://github.com/jmalonzo)) for a patch\n  removing node.js's old 'sys' package.\n* [@XhmikosR](https://github.com/XhmikosR) for suggesting new features\n  (option to remove special comments and strip out URLs quotation) and pointing\n  out numerous improvements (JSHint, media queries).\n\n## License\n\nClean-css is released under the [MIT License](/LICENSE).\n",
  "_id": "clean-css@1.0.2",
  "_from": "clean-css@~1.0.0"
}
